/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.2.2).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.jeeves.openapi.api;

import com.jeeves.openapi.dto.Coctail;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2020-05-17T18:39:11.880040700+03:00[Europe/Moscow]")

@Validated
@Api(value = "Coctail", description = "the Coctail API")
public interface CoctailApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    @ApiOperation(value = "Creates a coctails", nickname = "createCoctails", notes = "", response = Coctail.class, tags={ "Coctail", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Created coctail", response = Coctail.class) })
    @RequestMapping(value = "/coctails",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<Coctail> createCoctails(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Coctail coctail) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"image\" : \"image\", \"author\" : { \"password\" : \"password\", \"id\" : 0, \"email\" : \"email\", \"username\" : \"username\" }, \"name\" : \"name\", \"recipe\" : \"recipe\", \"description\" : \"description\", \"id\" : 0, \"coctailIngredients\" : [ { \"volume\" : 5.962133916683182, \"unit\" : \"unit\", \"ingredient\" : { \"image\" : \"image\", \"author\" : { \"password\" : \"password\", \"id\" : 0, \"email\" : \"email\", \"username\" : \"username\" }, \"name\" : \"name\", \"description\" : \"description\", \"id\" : 1, \"coctailIngredients\" : [ null, null ] }, \"id\" : 6 }, { \"volume\" : 5.962133916683182, \"unit\" : \"unit\", \"ingredient\" : { \"image\" : \"image\", \"author\" : { \"password\" : \"password\", \"id\" : 0, \"email\" : \"email\", \"username\" : \"username\" }, \"name\" : \"name\", \"description\" : \"description\", \"id\" : 1, \"coctailIngredients\" : [ null, null ] }, \"id\" : 6 } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "Retrieves existent coctails", nickname = "getCoctails", notes = "", response = Coctail.class, responseContainer = "List", tags={ "Coctail", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "List of all coctails", response = Coctail.class, responseContainer = "List") })
    @RequestMapping(value = "/coctails",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Coctail>> getCoctails() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"image\" : \"image\", \"author\" : { \"password\" : \"password\", \"id\" : 0, \"email\" : \"email\", \"username\" : \"username\" }, \"name\" : \"name\", \"recipe\" : \"recipe\", \"description\" : \"description\", \"id\" : 0, \"coctailIngredients\" : [ { \"volume\" : 5.962133916683182, \"unit\" : \"unit\", \"ingredient\" : { \"image\" : \"image\", \"author\" : { \"password\" : \"password\", \"id\" : 0, \"email\" : \"email\", \"username\" : \"username\" }, \"name\" : \"name\", \"description\" : \"description\", \"id\" : 1, \"coctailIngredients\" : [ null, null ] }, \"id\" : 6 }, { \"volume\" : 5.962133916683182, \"unit\" : \"unit\", \"ingredient\" : { \"image\" : \"image\", \"author\" : { \"password\" : \"password\", \"id\" : 0, \"email\" : \"email\", \"username\" : \"username\" }, \"name\" : \"name\", \"description\" : \"description\", \"id\" : 1, \"coctailIngredients\" : [ null, null ] }, \"id\" : 6 } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
