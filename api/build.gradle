apply plugin: 'java'

processResources.enabled = false
classes.enabled = false

def isWindows = System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')

def commandPrefix = ['openapi-generator-cli-4.2.2.jar', 'generate', '-i', 'swagger.yaml', '-g']

def springCommand = commandPrefix + ['spring', '-o', './out/spring', '-c', 'spring-config.json']
def angularCommand = commandPrefix + ['typescript-angular', '-o', './out/angular/@api-module', '-c', 'angular-config.json']
def docsCommand = commandPrefix + ['html2', '-o', './out/docs']

task cleanApiStubsAngular(type: Delete) {
    delete '../ui/src/app/@api-module', './out/angular'
}

task generateApiAngular(type: JavaExec) {
    dependsOn cleanApiStubsAngular
    main = "-jar"
    args(angularCommand)
}

task copyApiStubsAngular(type: Copy){
    dependsOn generateApiAngular
    from './out/angular'
    include '**/*.ts'
    exclude '@api-module/.openapi-generator'
    into '../ui/src/app'
}

task cleanApiStubsSpring(type: Delete) {
    delete '../src/main/java/com/jeeves/openapi', './out/spring'
}

task generateApiSpring(type: JavaExec) {
    dependsOn cleanApiStubsSpring
    main = "-jar"
    args(springCommand)
}

task copyApiStubsSpring(type: Copy){
    dependsOn generateApiSpring
    from './out/spring/source/com/jeeves/openapi'
    into '../src/main/java/com/jeeves/openapi'
}

task buildApiStubs(type: DefaultTask) {
   dependsOn copyApiStubsAngular, copyApiStubsSpring
}